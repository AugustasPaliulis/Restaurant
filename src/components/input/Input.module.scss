$grey-3: #828282;
$grey-5: #e0e0e0;
$error-red: #ff3041;
$error-bg: #ff9da5;
$basic-input-border: #007c89;

// Input border colors
$primary-colors: (
  orange: #ff9f0d,
  green: #195a00,
  brown: #bc9a6c,
);

// Input border glow colors
$glow-colors: (
  orange: rgb(228 121 17 / 50%),
  green: rgba(17, 51, 4, 0.5),
  brown: rgb(108 79 39 / 50%),
);

//placeholder code
@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}

@mixin placeholder {
  @include optional-at-root("::-webkit-input-placeholder") {
    @content;
  }

  @include optional-at-root(":-moz-placeholder") {
    @content;
  }

  @include optional-at-root("::-moz-placeholder") {
    @content;
  }

  @include optional-at-root(":-ms-input-placeholder") {
    @content;
  }
}

.label {
  color: $grey-3;
  display: flex;
  align-items: center;
  &.error {
    color: $error-red;
  }
  svg path {
    stroke: $grey-3;
  }
}

// Basic input style
.input {
  @include placeholder {
    color: $grey-3;
  }
  width: 100%;
  border: 1px solid $grey-5;
  outline: none;
  padding: 10px;
  box-sizing: border-box;
  transition: all 0.2s ease-in-out 0s;
  font-size: 16px;
  line-height: 18px;
  font-weight: normal;
  &:focus {
    outline: none;
    border: 1px solid $basic-input-border;
    box-shadow: inset 0 0 0 1px $basic-input-border;
  }
}

// Input border colors and focus style
.input {
  @each $color, $primary in $primary-colors {
    &.#{$color} {
      border: 1px solid $primary;
      &:focus {
        border-color: $primary;
        box-shadow: 0 0 3px 2px map-get($glow-colors, $color);
      }
    }
  }

  &.error {
    box-shadow: inset 0 0 0 2px $error-red !important;
    background: $error-bg;
    color: $error-red;
    &::placeholder {
      color: $error-red;
    }
    &:focus {
      border-color: $error-red;
      box-shadow: 0 0 3px 2px $error-red;
    }
  }
}

// Select (dropdown) input
.input-container {
  position: relative;
}
.selectInput {
  height: 18px;
  padding: 10px 0px 10px 0px;
  box-sizing: content-box;
  display: flex;
  justify-content: space-between;
  .selectText {
    text-align: left;
    margin-left: 10px;
  }
  .selectArrow {
    text-align: right;
    margin-right: 10px;
    color: $grey-3;
    user-select: none;
  }

  &.select {
    outline: none;
    border: 1px solid $basic-input-border;
    box-shadow: inset 0 0 0 1px $basic-input-border;
    @each $color, $primary in $primary-colors {
      &.#{$color} {
        border: 1px solid $primary;
        border-color: $primary;
        box-shadow: 0 0 3px 2px map-get($glow-colors, $color);
      }
    }
  }

  &.error {
    box-shadow: inset 0 0 0 2px $error-red !important;
    background: $error-bg;
    color: $error-red;
    .selectArrow {
      color: $error-red;
    }
    &.select {
      border-color: $error-red;
      box-shadow: 0 0 3px 2px $error-red;
    }
  }
}

.selectContent {
  position: absolute;
  z-index: 1000;
  width: 100%;
  width: 100%;
  box-shadow: rgba(100, 100, 111, 0.1) 0px 3px 15px 0px;
  padding: 10px;
  box-sizing: border-box;
  margin-top: 10px;
  border-radius: 5px;
  background-color: #fff;
  max-height: 250px;
  overflow: scroll;
  overflow-x: hidden;
  ul {
    margin: 0;
    list-style-type: none;
    padding: 0;

    li {
      cursor: pointer;
      &:first-child {
        margin-top: 0;
      }
      font-weight: 400;
      border-bottom: 1px solid $grey-5;
      padding-top: 15px;
      padding-bottom: 5px;

      &:hover {
        background-color: #195a00;
        color: #fff;
        transition: background-color 0.3s ease;
      }
    }
  }
}
