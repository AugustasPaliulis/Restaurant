$primary-green: #195a00;
$grey-1: #333333;
$grey-2: #4f4f4f;
$grey-3: #828282;
$grey-5: #e0e0e0;
.formContainer {
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  max-width: 900px;
  .formTitleContainer {
    h1 {
      font-size: 20px;
      color: $grey-2;
    }
  }
  .inputsContainer form {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    @media screen and (max-width: 450px) {
      grid-template-columns: 1fr;
    }
  }
  button {
    max-width: 400px;
  }

  &.blurredContainer {
    filter: blur(5px);
    pointer-events: none;
    user-select: none;
  }
  i {
    font-size: 13px;
    color: $grey-3;
  }
}

// Must auth overlay
.overlay {
  width: 250px;
  height: 100px;
  border-radius: 10px;
  font-weight: 600;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #fff;
  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
  position: absolute;
  z-index: 999;
  margin-left: 15vw;
  margin-top: 10vw;
  a {
    text-decoration: none;
    color: $primary-green;
  }

  @media screen and (max-width: 800px) {
    left: 0;
    right: 0;
    margin-left: auto;
    margin-right: auto;
  }
  @media screen and (max-width: 400px) {
    width: 80vw;
    height: 80px;
  }
}

.ConfirmOrder {
  width: 100%;
  i {
    font-size: 13px;
    color: $grey-3;
  }
}

.checkboxWrapper {
  display: flex;
  align-items: center;
  margin-bottom: 20px;
  label {
    margin-left: 10px;
    color: $grey-2;
  }
}
/* Style the custom checkbox */
@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  .checkboxWrapper input[type="checkbox"] {
    --active: #195a00; /* Changed blue to green */
    --active-inner: #fff;
    --focus: 2px rgba(25, 90, 0, 0.3); /* Changed blue to green */
    --border: #bbc1e1;
    --border-hover: #195a00; /* Changed blue to green */
    --background: #fff;
    --disabled: #f6f8ff;
    --disabled-inner: #e1e6f9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    width: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
  }
  .checkboxWrapper input[type="checkbox"]:after {
    content: "";
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease),
      opacity var(--d-o, 0.2s);
  }
  .checkboxWrapper input[type="checkbox"]:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: 0.3s;
    --d-t: 0.6s;
    --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
  }
  .checkboxWrapper input[type="checkbox"]:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
  }
  .checkboxWrapper input[type="checkbox"]:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
  }
  .checkboxWrapper input[type="checkbox"]:disabled + label {
    cursor: not-allowed;
  }
  .checkboxWrapper input[type="checkbox"]:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
  }
  .checkboxWrapper input[type="checkbox"]:focus {
    box-shadow: 0 0 0 var(--focus);
  }
  .ccheckboxWrapper input[type="checkbox"]:not(.switch) {
    width: 21px;
  }
  .ccheckboxWrapper3 input[type="checkbox"]:not(.switch):after {
    opacity: var(--o, 0);
  }
  .checkboxWrapper input[type="checkbox"]:not(.switch):checked {
    --o: 1;
  }
  .ccheckboxWrapper input[type="checkbox"] + label {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    margin-left: 40px;
  }

  .checkboxWrapper input[type="checkbox"]:not(.switch) {
    border-radius: 7px;
  }
  .checkboxWrapper input[type="checkbox"]:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    transform: rotate(var(--r, 20deg));
  }
  .checkboxWrapper input[type="checkbox"]:not(.switch):checked {
    --r: 43deg;
  }
}

.checkboxWrapper * {
  box-sizing: inherit;
}
.checkboxWrapper *:before,
.checkboxWrapper *:after {
  box-sizing: inherit;
}
