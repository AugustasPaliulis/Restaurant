$primary-green: #195a00;
$grey-1: #333333;
$grey-2: #4f4f4f;
$grey-3: #828282;
$grey-5: #e0e0e0;
.confirmationContainer {
  color: $grey-2;
  border-radius: 8px;
  padding: 20px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  width: 100%;
  box-sizing: border-box;
  overflow-y: auto;
  max-height: 400px;
  .goBackContainer {
    display: flex;
    align-items: center;
    cursor: pointer;
    &:hover {
      color: $primary-green;
      svg {
        scale: 1.05;
      }
    }
  }
  .confirmationTitleContainer {
    h1 {
      margin-top: 0;
      margin-bottom: 0;
    }
    p {
      font-size: 17px;
      margin: 0;
      margin-bottom: 20px;
      font-weight: 600;
      font-style: italic;
      color: $primary-green;
    }
  }
  ul {
    padding-left: 5px;
    list-style: none;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    li {
      h3 {
        margin: 0;
        font-size: 15px;
      }
    }
    @media screen and (max-width: 340px) {
      grid-template-columns: 1fr;
    }
  }
}

.buttonContainer {
  margin-top: 10px;
  display: flex;
  gap: 20px;
  button {
    height: 40px;
  }
  label {
    margin-left: 5px;
  }
  .checkboxWrapper {
    display: flex;
    align-items: center;
  }
  /* Style the custom checkbox */
  @supports (-webkit-appearance: none) or (-moz-appearance: none) {
    .checkboxWrapper input[type="checkbox"] {
      --active: #195a00; /* Changed blue to green */
      --active-inner: #fff;
      --focus: 2px rgba(25, 90, 0, 0.3); /* Changed blue to green */
      --border: #bbc1e1;
      --border-hover: #195a00; /* Changed blue to green */
      --background: #fff;
      --disabled: #f6f8ff;
      --disabled-inner: #e1e6f9;
      -webkit-appearance: none;
      -moz-appearance: none;
      height: 21px;
      width: 21px;
      outline: none;
      display: inline-block;
      vertical-align: top;
      position: relative;
      margin: 0;
      cursor: pointer;
      border: 1px solid var(--bc, var(--border));
      background: var(--b, var(--background));
      transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
    }
    .checkboxWrapper input[type="checkbox"]:after {
      content: "";
      display: block;
      left: 0;
      top: 0;
      position: absolute;
      transition: transform var(--d-t, 0.3s) var(--d-t-e, ease),
        opacity var(--d-o, 0.2s);
    }
    .checkboxWrapper input[type="checkbox"]:checked {
      --b: var(--active);
      --bc: var(--active);
      --d-o: 0.3s;
      --d-t: 0.6s;
      --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
    }
    .checkboxWrapper input[type="checkbox"]:disabled {
      --b: var(--disabled);
      cursor: not-allowed;
      opacity: 0.9;
    }
    .checkboxWrapper input[type="checkbox"]:disabled:checked {
      --b: var(--disabled-inner);
      --bc: var(--border);
    }
    .checkboxWrapper input[type="checkbox"]:disabled + label {
      cursor: not-allowed;
    }
    .checkboxWrapper input[type="checkbox"]:hover:not(:checked):not(:disabled) {
      --bc: var(--border-hover);
    }
    .checkboxWrapper input[type="checkbox"]:focus {
      box-shadow: 0 0 0 var(--focus);
    }
    .ccheckboxWrapper input[type="checkbox"]:not(.switch) {
      width: 21px;
    }
    .ccheckboxWrapper3 input[type="checkbox"]:not(.switch):after {
      opacity: var(--o, 0);
    }
    .checkboxWrapper input[type="checkbox"]:not(.switch):checked {
      --o: 1;
    }
    .ccheckboxWrapper input[type="checkbox"] + label {
      display: inline-block;
      vertical-align: middle;
      cursor: pointer;
      margin-left: 40px;
    }

    .checkboxWrapper input[type="checkbox"]:not(.switch) {
      border-radius: 7px;
    }
    .checkboxWrapper input[type="checkbox"]:not(.switch):after {
      width: 5px;
      height: 9px;
      border: 2px solid var(--active-inner);
      border-top: 0;
      border-left: 0;
      left: 7px;
      top: 4px;
      transform: rotate(var(--r, 20deg));
    }
    .checkboxWrapper input[type="checkbox"]:not(.switch):checked {
      --r: 43deg;
    }
  }

  .checkboxWrapper * {
    box-sizing: inherit;
  }
  .checkboxWrapper *:before,
  .checkboxWrapper *:after {
    box-sizing: inherit;
  }
}
